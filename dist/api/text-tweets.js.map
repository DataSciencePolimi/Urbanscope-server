{"version":3,"sources":["api/text-tweets.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AAEb,IAAI,IAAI,GAAG,OAAO,CAAE,MAAM,CAAE,CAAC;;;AAG7B,IAAI,MAAM,GAAG,OAAO,CAAE,QAAQ,CAAE,CAAC;;;AAGjC,IAAI,MAAM,GAAG,OAAO,CAAE,IAAI,CAAE,CAAC;AAC7B,IAAI,aAAa,GAAG,OAAO,CAAE,WAAW,CAAE,CAAC,aAAa,CAAC;;;AAGzD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAE,UAAU,EAAE,KAAK,CAAE,CAAC;AACpD,IAAM,WAAW,GAAG,YAAY,CAAC;;;AAGjC,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAE,CAAC;;;AAGjD,SAAS,GAAG,GAAG;AACb,SAAO,MAAM,EAAE,CAAC,MAAM,CAAE,WAAW,CAAE,CAAC;CACvC;;;;;;;;;AASD,MAAM,CAAC,OAAO,4BAAG;MACX,EAAE,EACF,KAAK,EACL,GAAG,EACH,GAAG,EACH,IAAI,EAgBJ,KAAK,EAWL,UAAU,EACV,MAAM,EAEN,QAAQ;;;;AAlCR,UAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;AACvB,aAAK,GAAG,EAAE,CAAC,SAAS;AACpB,WAAG,GAAG,EAAE,CAAC,OAAO;AAChB,WAAG,GAAG,EAAE,CAAC,MAAM;AACf,YAAI,GAAG,EAAE,CAAC,IAAI;;AAClB,WAAG,CAAC,KAAK,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,cAAc,CAAE,CAAC;;;AAGxC,YAAI,GAAG,IAAI,IAAI,IAAI,CAAC;AACpB,aAAK,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC;AACvB,WAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;;AAEnB,aAAK,GAAG,MAAM,CAAC,GAAG,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC,MAAM,EAAE,CAAC;AACnE,WAAG,GAAG,MAAM,CAAC,GAAG,CAAE,GAAG,EAAE,WAAW,CAAE,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC,MAAM,EAAE,CAAC;AAC7D,WAAG,GAAG,MAAM,CAAE,GAAG,CAAE,CAAC;;AAEpB,WAAG,CAAC,KAAK,CAAE,WAAW,EAAE,KAAK,CAAE,CAAC;AAChC,WAAG,CAAC,KAAK,CAAE,SAAS,EAAE,GAAG,CAAE,CAAC;AAC5B,WAAG,CAAC,KAAK,CAAE,SAAS,EAAE,GAAG,CAAE,CAAC;;AAExB,aAAK,GAAG;AACV,gBAAM,EAAE,SAAS;AACjB,cAAI,EAAE;AACJ,gBAAI,EAAE,KAAK;AACX,gBAAI,EAAE,GAAG,EACV;AACD,aAAG,EAAE,GAAG;AACR,cAAI,EAAE,IAAI,EACX;;AAED,WAAG,CAAC,KAAK,CAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,sBAAsB,CAAE,CAAC;AAClD,kBAAU,GAAG,aAAa,EAAE;;eACb,UAAU,CAAC,IAAI,CAAE,KAAK,EAAE,mCAAmC,CAAE;;;AAA5E,cAAM;AAEN,gBAAQ,GAAG;AACb,mBAAS,EAAE,MAAM,CAAE,KAAK,CAAE,CAAC,MAAM,CAAE,WAAW,CAAE;AAChD,iBAAO,EAAE,MAAM,CAAE,GAAG,CAAE,CAAC,MAAM,CAAE,WAAW,CAAE;AAC5C,gBAAM,EAAE,MAAM,EACf;;AAED,YAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;;;;;;;CACtB,CAAA,CAAC","file":"api/text-tweets.js","sourcesContent":["'use strict';\n// Load system modules\nlet path = require( 'path' );\n\n// Load modules\nlet moment = require( 'moment' );\n\n// Load my modules\nlet logger = require( './' );\nlet getCollection = require( '../model/' ).getCollection;\n\n// Constant declaration\nconst ENDPOINT = path.basename( __filename, '.js' );\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\n// Module variables declaration\nlet log = logger.child( { endpoint: ENDPOINT } );\n\n// Module functions declaration\nfunction now() {\n  return moment().format( DATE_FORMAT );\n}\n\n// Module class declaration\n\n// Module initialization (at first load)\n\n// Entry point\n\n// Exports\nmodule.exports = function* () {\n  let qs = this.request.query;\n  let start = qs.startDate;\n  let end = qs.endDate;\n  let nil = qs.nil_ID; // jshint ignore: line\n  let lang = qs.lang;\n  log.trace( { qs: qs }, 'Query string' );\n\n  // Default values\n  lang = lang || 'it';\n  start = start || now();\n  end = end || now();\n\n  start = moment.utc( start, DATE_FORMAT ).startOf( 'day' ).toDate();\n  end = moment.utc( end, DATE_FORMAT ).endOf( 'day' ).toDate();\n  nil = Number( nil );\n\n  log.trace( 'Start: %s', start );\n  log.trace( 'End: %s', end );\n  log.trace( 'Nil: %s', nil );\n\n  let query = {\n    source: 'twitter',\n    date: {\n      $gte: start,\n      $lte: end,\n    },\n    nil: nil,\n    lang: lang,\n  };\n\n  log.debug( { query: query }, 'Performing the query' );\n  let collection = getCollection();\n  let tweets = yield collection.find( query, 'id lang date author authorId text' );\n\n  let response = {\n    startDate: moment( start ).format( DATE_FORMAT ),\n    endDate: moment( end ).format( DATE_FORMAT ),\n    tweets: tweets,\n  };\n\n  this.body = response;\n};\n\n\n//  50 6F 77 65 72 65 64  62 79  56 6F 6C 6F 78"],"sourceRoot":"/source/"}