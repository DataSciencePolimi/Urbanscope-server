{"version":3,"sources":["utils/quartile.js"],"names":[],"mappings":";;;;;;;;AAAA,YAAY,CAAC;;;;;;;;AAQb,IAAM,cAAc,GAAG,CAAC,CAAC;;;;;AAKzB,SAAS,CAAC,CAAE,CAAC,EAAE,IAAI,EAAG;AACpB,MAAI,EAAE,GAAG,CAAC,GAAC,CAAC,CAAC;AACb,MAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AACpB,MAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;;AAErB,MAAI,IAAI,GAAG,CAAC,GAAC,EAAE,CAAC;AAChB,MAAI,GAAG,YAAA,CAAC;AACR,MAAI,GAAG,CAAE,IAAI,CAAE,KAAG,IAAI,EAAG;AACvB,OAAG,GAAG,CAAC,IAAI,CAAE,IAAI,GAAC,CAAC,CAAE,GAAG,IAAI,CAAE,IAAI,CAAE,CAAA,GAAE,CAAC,CAAC;GACzC,MAAM;AACL,OAAG,GAAG,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,CAAE,CAAC;GAC3B;;AAED,SAAO,GAAG,CAAC;CACZ;;;;;;;;;QAUQ,CAAC,GAAD,CAAC","file":"utils/quartile.js","sourcesContent":["'use strict';\r\n// Load system modules\r\n\r\n// Load modules\r\n\r\n// Load my modules\r\n\r\n// Constant declaration\r\nconst GREY_THRESHOLD = 6;\r\n\r\n// Module variables declaration\r\n\r\n// Module functions declaration\r\nfunction q( i, data ) {\r\n  let Fi = i/4; // QUARTILE so we use: 4\r\n  let n = data.length;\r\n  let int = Math.floor;\r\n\r\n  let prod = n*Fi;\r\n  let val;\r\n  if( int( prod )===prod ) {\r\n    val = (data[ prod-1 ] + data[ prod ])/2;\r\n  } else {\r\n    val = data[ int( prod ) ];\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\n\r\n// Module class declaration\r\n\r\n// Module initialization (at first load)\r\n\r\n// Entry point\r\n\r\n// Exports\r\nexport { q };\r\n\r\n\r\n//  50 6F 77 65 72 65 64  62 79  56 6F 6C 6F 78"],"sourceRoot":"/source/"}