{"version":3,"sources":["utils/anomalies.js"],"names":[],"mappings":"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","file":"utils/anomalies.js","sourcesContent":["'use strict';\n// Load system modules\n\n// Load modules\nimport _ from 'lodash';\n\n// Load my modules\n\n// Constant declaration\nconst GREY_THRESHOLD = 6;\nconst NILS_TO_USE = [\n  1,\n  2,\n  4,\n  6,\n  7,\n  9,\n  10,\n  11,\n  20,\n  21,\n  22,\n  35,\n  44,\n  51,\n  52,\n  60,\n  69,\n  71,\n];\n\n// Module variables declaration\n\n// Module functions declaration\nfunction q( i, data ) {\n  let Fi = i/4; // QUARTILE so we use: 4\n  let n = data.length;\n  let int = Math.floor;\n\n  let prod = n*Fi;\n  let val;\n  if( int( prod )===prod ) {\n    val = (data[ prod-1 ] + data[ prod ])/2;\n  } else {\n    val = data[ int( prod ) ];\n  }\n\n  return val;\n}\nfunction quartiles( percentages ) {\n  let quartile1 = q( 1, percentages );\n  let quartile2 = q( 2, percentages );\n  let quartile3 = q( 3, percentages );\n  let quartile4 = q( 4, percentages );\n\n  return {\n    quartile1,\n    quartile2,\n    quartile3,\n    quartile4,\n  };\n}\nfunction thresholds( percentages ) {\n  let {\n    quartile1: q1,\n    quartile3: q3,\n  } = quartiles( percentages );\n\n  let threshold1 = q1-1.5*(q3-q1);\n  let threshold2 = q1;\n  let threshold3 = q3;\n  let threshold4 = q3+1.5*(q3-q1);\n\n  return {\n    threshold1,\n    threshold2,\n    threshold3,\n    threshold4,\n  };\n}\n/*\nfunction filterNils( posts, nil ) {\n  // return posts.length>=GREY_THRESHOLD;\n  return _.contains( NILS_TO_USE, Number( nil ) );\n}\n*/\nfunction getLanguage( post ) {\n  let lang = post.lang.toLowerCase();\n  if( lang!=='it' && lang!=='en' ) {\n    return 'other';\n  } else {\n    return lang;\n  }\n}\nfunction getLanguagesPercentage( posts ) {\n  let length = posts.length;\n\n  return _( posts )\n  .countBy( getLanguage )\n  .mapValues( count => count/length )\n  .value();\n}\n\nfunction getNilAnomalies( posts, lang ) {\n\n  let languagePercentagePerNil = _( posts )\n  // Group by nil\n  .groupBy( 'nil' )\n  // Use only the provided NILS\n  .pick( NILS_TO_USE )\n  // Get the percentage of each language\n  .mapValues( getLanguagesPercentage )\n  .value();\n\n  // Calculate the quartiles and the thresholds of the selected language\n  let selectedLanguagePercentages = _( languagePercentagePerNil )\n  // Get the percentages for the selected language\n  .map( lang )\n  // Sort ascending\n  .sortBy()\n  .value();\n\n  let {\n    threshold1: t1,\n    threshold2: t2,\n    threshold3: t3,\n    threshold4: t4,\n  } = thresholds( selectedLanguagePercentages );\n\n\n  // Map the nil to the correct output\n  return _( languagePercentagePerNil )\n  .map( function( langs, nil ) {\n    let selectedLanguagePercentage = langs[ lang ];\n    let type;\n\n    if( selectedLanguagePercentage<=t1 ) {\n      type = 'Percentiale molto bassa';\n    } else if ( selectedLanguagePercentage>t1 && selectedLanguagePercentage<=t2 ) {\n      type = 'Percentiale bassa';\n    } else if ( selectedLanguagePercentage>t2 && selectedLanguagePercentage<=t3 ) {\n      type = 'Percentiale non anomala';\n    } else if ( selectedLanguagePercentage>t3 && selectedLanguagePercentage<=t4 ) {\n      type = 'Percentiale alta';\n    } else if ( selectedLanguagePercentage>t4 ) {\n      type = 'Percentiale molto alta';\n    }\n\n    return {\n      value: selectedLanguagePercentage,\n      type,\n      nil_id: Number( nil ), // jshint ignore:line\n    };\n  } )\n  .filter( 'type' )\n  .value();\n}\n\n\n// Module class declaration\n\n// Module initialization (at first load)\n\n// Entry point\n\n// Exports\nexport { getNilAnomalies, NILS_TO_USE };\n\n\n//  50 6F 77 65 72 65 64  62 79  56 6F 6C 6F 78"],"sourceRoot":"/source/"}